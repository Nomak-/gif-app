{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GidGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","name","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","URL","encodeURI","fetch","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","estado","setEstado","useEffect","then","imgs","useFetchGifs","imagenes","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OACI,oCACI,0BAAMC,KAAK,OAAOC,SAdL,SAACC,GAClBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OACtCP,EAAc,OAUd,2BAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SApBzB,SAACP,GAElBH,EAAcG,EAAEQ,OAAOF,QAkB6CG,YAAY,gC,uBC7B3EC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QAVvB,kBAcZL,GAdY,4CAAH,sDCEPQ,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAChC,OACI,yBAAKI,UAAU,8CACf,gCAAK,yBAAKC,IAAKL,EAAKM,IAAKP,EAAOK,UAAU,eAA1C,IAA8D,2BAAIL,MCA7DQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAa,MAEVhB,mBAAS,CACjCuB,KAAM,GACNc,SAAS,IAJyB,mBAE/BC,EAF+B,KAEvBC,EAFuB,KAgBtC,OARAC,qBAAW,WACPzB,EAASC,GACJyB,MAAK,SAAAC,GAAI,OAAIH,EAAU,CACpBhB,KAAMmB,EACNL,SAAS,SAElB,CAACrB,IAEGsB,EDZ0BK,CAAa3B,GAAlC4B,EAFyB,EAE9BrB,KAAec,EAFe,EAEfA,QAEtB,OAEI,oCACA,wBAAIJ,UAAU,qCAAqCjB,GAClDqB,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAGTW,EAASnB,KAAK,SAAAD,GAAI,OAChB,kBAAC,EAAD,iBAAiBA,EAAjB,CAAuBqB,IAAKrB,EAAKG,YEXpCmB,EAAe,WAAO,IAAD,EAGM9C,mBAAS,CAAC,SAHhB,mBAGvB+C,EAHuB,KAGXhD,EAHW,KAQ9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQgD,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS6B,IAAK7B,EAAUA,SAAUA,UClB1DgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.334bcc12.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('') \r\n\r\n    const handleSearch = (e) => {\r\n       \r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]) //al usar el cats me devuelve el estado anterior (valores de categories) y le sumo el nuevo\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n            <form name='algo' onSubmit={handleSubmit}>\r\n            <input type='text' value={inputValue} onChange={ handleSearch } placeholder=\"Ingrese una categorÃ­a\" />\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n\r\n    const URL = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=g5d6JgJa15viX9vWFl2wPh4DNwroPn5F`\r\n    const res = await fetch(URL)\r\n    const { data } = await res.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return(\r\n        <div className=\"card animate__animated animate__bounceInUp\">\r\n        <li> <img src={url} alt={title} className='images-gif'></img> <p>{title}</p></li>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:imagenes, loading} = useFetchGifs(category) //le envio la categoria a mi custom \r\n\r\n    return (\r\n        //operador ternario, evalua la primera opcion verdadera y lo ejecuta, no sigue validando es mas rapido que el DOS PUNTOS\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>} \r\n        <div className=\"card-grid\">\r\n            \r\n          \r\n            { imagenes.map( gifs =>\r\n                <GifGridItem {...gifs} key={gifs.id}/> \r\n               // \r\n            )}\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => { //la categoria cae aca, la enie desde el gidgrid.js LINEA 9\r\n\r\n    const [estado, setEstado] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n\r\n    useEffect( () => { //ejecuta la funcion indicada cuando el componente es renderizado por primera vez, equivalente a === componentdidmount\r\n        getGifs( category )\r\n            .then(imgs => setEstado({\r\n                data: imgs,\r\n                loading: false\r\n            })) // cuando nos trae las imagenes, las agrega con setImages\r\n    }, [category]) //el array es para incluir dependencias\r\n\r\n    return estado\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GidGrid';\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Cars'])\r\n\r\n   \r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid key={category} category={category} />\r\n                        \r\n                        )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './components/GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}